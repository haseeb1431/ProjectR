@model SearchModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Search").Text);
}
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;

<script type="text/javascript">
    $(document).ready(function () {
        //3.5 to 3.6 
        //as to adv 
        $("#@Html.FieldIdFor(model => model.adv)").click(toggleAdvancedSearch);
        

        toggleAdvancedSearch();
    });

    function toggleAdvancedSearch() {

        if ($('#@Html.FieldIdFor(model => model.adv)').is(':checked')) {
            $('#advanced-search-block').show();
        }
        else {
            $('#advanced-search-block').hide();
        }
    }
</script>


<div class="features_items search-page"><!--features_items-->
    <h2 class="title text-center">@T("Search")</h2>

    
    <div class="product-details">
        <div class="custom-page-box-div">
            @using (Html.BeginRouteForm("ProductSearch", FormMethod.Get))
            {
                <div class="basic-search">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.q, new { @class = "col-md-2 control-label" }, ":")
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.q, new { @class = "gray-input" })
                        </div>
                    </div>
                    @Html.Widget("productsearch_page_basic")
                    <div class="form-group row reversed">
                        @Html.CheckBoxFor(model => model.adv)
                        @Html.LabelFor(model => model.adv, new { @class = "col-md-2 control-label" })
                    </div>
                </div>
                @*<div id="legend">
                    
                </div>*@
                <div class="advanced-search" id="advanced-search-block">
                    @if (Model.AvailableCategories.Count > 0)
                    {
                        <div class="form-group row">
                            @Html.LabelFor(model => model.cid, new { @class = "col-md-2 control-label" }, ":")
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.cid, Model.AvailableCategories, new { @class = "gray-dropdown" })
                            </div>
                        </div>
                        <div class="form-group row reversed">
                            <div class="col-md-8">
                                @Html.CheckBoxFor(model => model.isc)
                                @Html.LabelFor(model => model.isc)
                            </div>
                            
                        </div>
                    }
                    @if (Model.AvailableManufacturers.Count > 0)
                    {
                        <div class="form-group row">
                            @Html.LabelFor(model => model.mid, new { @class = "col-md-2 control-label" }, ":")
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.mid, Model.AvailableManufacturers, new { @class = "gray-dropdown" })
                            </div>
                        </div>
                    }
                    <div class="form-group row">
                        <div class="col-md-2">
                            <label>@T("Search.PriceRange"):</label>
                        </div>
                        <div class="col-md-8">
                            <div class="price-range row">
                                <div class="col-md-1">@T("Search.PriceRange.From")</div>
                                <div class="col-md-3">@Html.TextBoxFor(model => model.pf, new { @class = "gray-input" })</div>
                                <div class="col-md-1">@T("Search.PriceRange.To")</div>
                                <div class="col-md-3">@Html.TextBoxFor(model => model.pt, new { @class = "gray-input" })</div>
                            </div>
                        </div>
                    </div>
                    <div class="inputs reversed">
                        @Html.CheckBoxFor(model => model.sid)
                        @Html.LabelFor(model => model.sid)
                    </div>
                    @Html.Widget("productsearch_page_advanced")
                </div>
                <div class="buttons">
                    <input type="submit" class="button-1 search-button btn btn-primary" value="@T("Search")" />
                </div>
            }
        </div>
    </div>
</div>

 @if (!String.IsNullOrEmpty(Model.Warning))
 {
     <div class="row">
         <div class="col-md-12">
             <div class="custom-page-box-border-less-div">
                 <div class="alert alert-info square-box">
                     @Model.Warning
                 </div>
         </div></div>
     </div>
     
 }


@if (Model.NoResults)
{
    <div class="row">
        <div class="col-md-12">
             <div class="custom-page-box-border-less-div">
            <div class="alert alert-danger square-box">
                @T("Search.NoResultsText")
            </div>
        </div></div>
    </div>

    
}

<div class="features_items">
    <div class="custom-page-box-border-less-div">
        @if (Model.Products.Count > 0)
        {
            <div class="product-list">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                        
                        @Html.Partial("_ProductBox", product)
                    </div>
                }
            </div>
        }
        <div class="pagination-area">
            <div class="pagination">
                @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber").BooleanParameterName("adv").BooleanParameterName("isc").BooleanParameterName("sid")
            </div>
           
        </div>

           
    </div>
    
</div>


